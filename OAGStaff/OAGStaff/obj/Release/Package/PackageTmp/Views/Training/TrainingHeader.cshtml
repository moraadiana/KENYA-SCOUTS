@model OAGStaff.Models.Training
@{
    ViewBag.Title = "Training Header";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-lg-12 mb-4 order-0">
            <div class="card">
                <div class="card-body">
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <div class="alert alert-danger alert-container" role="alert"></div>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="text-uppercase">Training Application</h5>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item active">Dashboard</li>
                                <li class="breadcrumb-item">
                                    <a href="@Url.Action("index","dashboard")">Training Application</a>
                                </li>
                            </ol>
                        </nav>
                    </div>
                    <div class="dropdown-divider"></div>
                    <form action="@Url.Action("trainingheader","training")" method="post">
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>Staff No</label><br />
                                <label class="text-primary">@Model.StaffNo</label>
                            </div>
                            <div class="col-md-3">
                                <label>Staff Name</label><br />
                                <label class="text-primary">@Model.StaffName</label>
                            </div>
                            <div class="col-md-3">
                                <label>Department</label><br />
                                <label class="text-primary">@Model.Directorate</label>
                            </div>
                            <div class="col-md-3">
                                <label>Direcrorate</label><br />
                                <label class="text-primary">@Model.Department</label>
                            </div>
                            <div class="col-md-3">
                                <label>Sub Directorate</label><br />
                                <label class="text-primary">@Model.SubDirectorate</label>
                            </div>
                            <div class="col-md-3">
                                <label>Unit Code</label><br />
                                <label class="text-primary">@Model.UnitCode</label>
                            </div>
                            <div class="col-md-3">
                                <label>Designation</label><br />
                                <label class="text-primary">@Model.JobTitle</label>
                            </div>
                            <div class="col-md-3">
                                <label>Gender</label><br />
                                <label class="text-primary">@Model.Gender</label>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>Period</label>
                                @Html.DropDownListFor(m => m.Period, new SelectList(Model.TrainingPeriods, "Period", "Period"), new { @class = "form-control",id="period" })
                            </div>
                            <div class="col-md-3">
                                <label>Start Date</label>
                                <input type="date" name="StartDate" id="start-date" class="form-control" required />
                            </div>
                            <div class="col-md-3">
                                <label>End Date</label>
                                <input type="date" name="EndDate" id="end-date" class="form-control" required />
                            </div>
                            <div class="col-md-3">
                                <label>Course</label>
                                <input type="text" name="Course" class="form-control" required placeholder="Course   " />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>Application Type</label>
                                <select class="form-control" name="ApplicantType" required>
                                    <option value="0">Individual</option>
                                    <option value="1">Group</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label>Training Classification</label>
                                <select class="form-control" name="TrainingClassification" required>
                                    <option value="0">External</option>
                                    <option value="1">In-house</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label>Training Need</label>
                                <input type="text" name="TrainingNeed" class="form-control" required placeholder="Training Need" />
                            </div>
                            <div class="col-md-3">
                                <label>Training Objective</label>
                                <input type="text" name="TrainingObjective" class="form-control" required placeholder="Training Objective" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>Type</label>
                                <select class="form-control" name="TrainingType" required>
                                    <option value="0">Local</option>
                                    <option value="1">Foreign</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label>Trainer</label>
                                <input type="text" name="Trainer" class="form-control" required placeholder="Trainer" />
                            </div>
                            <div class="col-md-3">
                                <label>Mode of Training</label>
                                <select class="form-control" name="ModeOfTraining" required>
                                    <option value="1">Physical</option>
                                    <option value="2">Virtual</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label>Venue</label>
                                <input type="text" name="Venue" class="form-control" required placeholder="Venue" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>DSA Vote</label>
                                @Html.DropDownListFor(m => m.DsaVote, new SelectList(Model.TrainingVotes, "Vote", "VoteName"), new { @class = "form-control", id = "dsa-vote" })
                            </div>
                            <div class="col-md-3">
                                <label>Training Vote</label>
                                @Html.DropDownListFor(m => m.TrainingVote, new SelectList(Model.TrainingVotes, "Vote", "VoteName"), new { @class = "form-control", id = "training-vote" })
                            </div>
                            <div class="col-md-3">
                                <label>Transport Vote</label>
                                @Html.DropDownListFor(m => m.TransportVote, new SelectList(Model.TrainingVotes, "Vote", "VoteName"), new { @class = "form-control", id = "transport-vote" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="d-flex justify-content-between align-items-center">
                                    <a href="@Url.Action("traininglisting","training")" class="btn btn-warning">Back</a>
                                    <button type="submit" class="btn btn-success" onclick="return validateInputs()">Next</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    const alertContainer = document.querySelector('.alert-container');
    const startDate = document.getElementById('start-date');
    const endDate = document.getElementById('end-date');
    const dsaVote = document.getElementById('dsa-vote')
    const trainingVote = document.getElementById('training-vote')
    const transportVote = document.getElementById('transport-vote')
    const budgetPeriod = document.getElementById('period');
    const budgetAmount = document.getElementById('budget-amount');

    alertContainer.style.display = 'none';

    const validateInputs = function () {
        if (startDate.value === '') {
            alertContainer.style.display = 'block';
            alertContainer.textContent = 'Start date cannot be empty';
            startDate.focus();
            return false;
        }

        if (endDate.value === '') {
            alertContainer.style.display = 'block';
            alertContainer.textContent = 'End date cannot be empty';
            endDate.focus();
            return false;
        }

        alertContainer.style.display = 'none';
        return true;
    }
</script>