@model OAGStaff.Models.Recruitment
@{
    ViewBag.Title = "Recruitment Evaluation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-lg-12 mb-4 order-0">
            <div class="card">
                <div class="card-body">
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="text-uppercase">Recruitment Evaluation</h5>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item active">Dashboard</li>
                                <li class="breadcrumb-item">
                                    <a href="@Url.Action("index","dashboard")">Recruitment Evaluation</a>
                                </li>
                            </ol>
                        </nav>
                    </div>
                    <div class="dropdown-divider"></div>
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <label class="form-label">Requisition No</label><br />
                            <label class="text-success" style="font-weight:bold;" id="requisition-no">@Model.RequisitionNo</label>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Job Title</label><br />
                            <label class="text-success" style="font-weight:bold;">@Model.JobTitle</label>
                        </div>
                    </div>
                    <form action="@Url.Action("recruitmentevaluation","recruitment")" method="post">
                        <div class="row">
                            <div class="col-md-12">
                                <input type="hidden" name="Role" value="@Model.Role" required placeholder="Role" id="role" class="form-control" />
                                <input type="hidden" name="RequisitionNo" value="@Model.RequisitionNo" required placeholder="Requisition No" class="form-control" />
                                <input type="hidden" name="SelectedCategories" value="@Model.SelectedCategories" required placeholder="Selected Categories" id="categories" class="form-control" />
                                <div class="table-responsive">
                                    <table id="example" class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Applicant No</th>
                                                <th>Applicant Name</th>
                                                <th>Shortlist</th>
                                                <th>Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var applicant in Model.JobApplicants)
                                            {
                                                <tr>
                                                    <td>@applicant.ApplicantNo</td>
                                                    <td>@applicant.ApplicantName</td>
                                                    <td>
                                                        <select class="form-control shortlist" required>
                                                            <option value="1">No</option>
                                                            <option value="2">Yes</option>
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <input type="text" class="form-control remarks" placeholder="Remarks" required />
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        @if (Model.Role == "Secretary")
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="form-label">General Remarks</label>
                                    <textarea name="Comments" class="form-control" required placeholder="Please type your general remarks here..."></textarea>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-md-12">
                                    <button type="submit" class="btn btn-success float-end" onclick="return getScores()">Submit</button>
                                </div>
                            </div>
                        }
                    </form>
                    @if (Model.Role == "Member")
                    {
                        <form action="@Url.Action("acceptevaluation","recruitment")" method="post">
                            <div class="col-md-12">
                                <input type="hidden" name="Role" value="@Model.Role" required placeholder="Role" id="role" class="form-control" />
                                <input type="hidden" name="RequisitionNo" value="@Model.RequisitionNo" required placeholder="Requisition No" class="form-control" />
                                <div class="row">
                                    <div class="col-md-12">
                                        <label class="form-label">General Remarks</label>
                                        <textarea name="Comments" class="form-control" required placeholder="Please type your general remarks here..."></textarea>
                                    </div>
                                </div>
                                <div class="row mt-4">
                                    <div class="col-md-12">
                                        <button type="submit" class="btn btn-primary float-end">Accept</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    const table = document.getElementById('example');
    const requisitionNoDOM = document.getElementById('requisition-no');
    const roleDOM = document.getElementById('role');
    const categoriesDOM = document.getElementById('categories');

    const getAssignedScores = async function (requisitionNo, applicationNo) {
        const response = await fetch(`/api/getevaluationscores?requisitionNo=${requisitionNo}&applicationNo=${applicationNo}`);
        return await response.json();
    }

    const loadAssignedScores = async function () {
        const inputs = table.querySelectorAll('.shortlist');
        for (let i = 0; i < inputs.length; i++) {
            const rows = inputs[i].parentElement.parentElement;
            const applicationNo = rows.cells[0].innerHTML;
            const shortlistDOM = rows.cells[2].querySelector('.shortlist');
            const remarksDOM = rows.cells[3].querySelector('.remarks');
            const requisitionNo = requisitionNoDOM.textContent;

            const result = await getAssignedScores(requisitionNo, applicationNo);
            shortlistDOM.value = result.Shortlisted;
            remarksDOM.value = result.Remarks;
            const role = roleDOM.value;
            if (role == "Secretary") {
                shortlistDOM.removeAttribute('disabled')
                remarksDOM.removeAttribute('disabled')
            }
            else {
                shortlistDOM.setAttribute('disabled', '')
                remarksDOM.setAttribute('disabled', '')
            }
        }
    }
    loadAssignedScores();

    const getScores = function () {
        let categories = '';
        const inputs = table.querySelectorAll('.shortlist');
        for (let i = 0; i < inputs.length; i++) {
            const rows = inputs[i].parentElement.parentElement;
            const applicationNo = rows.cells[0].innerHTML;
            const shortlistDOM = rows.cells[2].querySelector('.shortlist');
            const remarksDOM = rows.cells[3].querySelector('.remarks');
            const requisitionNo = requisitionNoDOM.textContent;

            categories += shortlistDOM.value + '::' + remarksDOM.value + '::' + requisitionNo + '::' + applicationNo + '[]';
        }
        categoriesDOM.value = '';
        categoriesDOM.value = categories;
    }
</script>