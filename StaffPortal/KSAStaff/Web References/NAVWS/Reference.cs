//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KSAStaff.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Staffportal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal")]
    public partial class Staffportal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AvailableLeaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback AvailableLeaveDayssOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidStaffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClaimRequisitionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestRequisitionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrenderHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePettyCashRequisitionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePettyCashSurrenderHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIncludesNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIsNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineLeaveReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateStaffLeaveStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback Generatep9ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveRelieverDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextImprestSurrenderNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextPettyCashNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPettyCashDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffCitizenshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffDepartmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreItemQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRMLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRMTrainingApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPendingLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertClaimRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHRMTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestRequisitonLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestSurrenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPettyCashRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPettyCashSurrenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertStoreRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLeaveAnnualOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadImprestSurrenderLineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForUnchnagedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelClaimRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelImprestRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelPettyCashRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelPettyCashSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnCancelStoreRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendClaimRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendImprestRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendImprestSurrenderForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendPettyCashRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendPettyCashSurrenderForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnSendStoreRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnsendLeaveRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegFileUploadAttOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveClaimRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveHRMTrainingParticipantOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveImprestRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePettyCashRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemoAttchmntsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StaffLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePettyCashSurrenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStaffPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateStartDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Staffportal() {
            this.Url = global::KSAStaff.Properties.Settings.Default.KSAStaff_NAVWS_Staffportal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AvailableLeaveDaysCompletedEventHandler AvailableLeaveDaysCompleted;
        
        /// <remarks/>
        public event AvailableLeaveDayssCompletedEventHandler AvailableLeaveDayssCompleted;
        
        /// <remarks/>
        public event CalcEndDateCompletedEventHandler CalcEndDateCompleted;
        
        /// <remarks/>
        public event CalcReturnDateCompletedEventHandler CalcReturnDateCompleted;
        
        /// <remarks/>
        public event CheckStaffPasswordChangedCompletedEventHandler CheckStaffPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckValidStaffNoCompletedEventHandler CheckValidStaffNoCompleted;
        
        /// <remarks/>
        public event CreateClaimRequisitionHeaderCompletedEventHandler CreateClaimRequisitionHeaderCompleted;
        
        /// <remarks/>
        public event CreateImprestRequisitionHeaderCompletedEventHandler CreateImprestRequisitionHeaderCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrenderHeaderCompletedEventHandler CreateImprestSurrenderHeaderCompleted;
        
        /// <remarks/>
        public event CreatePettyCashRequisitionHeaderCompletedEventHandler CreatePettyCashRequisitionHeaderCompleted;
        
        /// <remarks/>
        public event CreatePettyCashSurrenderHeaderCompletedEventHandler CreatePettyCashSurrenderHeaderCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionHeaderCompletedEventHandler CreateStoreRequisitionHeaderCompleted;
        
        /// <remarks/>
        public event DeleteDocumentAttachmentCompletedEventHandler DeleteDocumentAttachmentCompleted;
        
        /// <remarks/>
        public event DetermineIfIncludesNonWorkingCompletedEventHandler DetermineIfIncludesNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineIfIsNonWorkingCompletedEventHandler DetermineIfIsNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineLeaveReturnDateCompletedEventHandler DetermineLeaveReturnDateCompleted;
        
        /// <remarks/>
        public event GeneratePayslipReportCompletedEventHandler GeneratePayslipReportCompleted;
        
        /// <remarks/>
        public event GenerateStaffLeaveStatementCompletedEventHandler GenerateStaffLeaveStatementCompleted;
        
        /// <remarks/>
        public event Generatep9ReportCompletedEventHandler Generatep9ReportCompleted;
        
        /// <remarks/>
        public event GetAttachmentDetailsCompletedEventHandler GetAttachmentDetailsCompleted;
        
        /// <remarks/>
        public event GetEmployeeNameCompletedEventHandler GetEmployeeNameCompleted;
        
        /// <remarks/>
        public event GetImprestDetailsCompletedEventHandler GetImprestDetailsCompleted;
        
        /// <remarks/>
        public event GetItemQuantityCompletedEventHandler GetItemQuantityCompleted;
        
        /// <remarks/>
        public event GetLeaveRelieverDetailsCompletedEventHandler GetLeaveRelieverDetailsCompleted;
        
        /// <remarks/>
        public event GetNextImprestSurrenderNoCompletedEventHandler GetNextImprestSurrenderNoCompleted;
        
        /// <remarks/>
        public event GetNextPettyCashNoCompletedEventHandler GetNextPettyCashNoCompleted;
        
        /// <remarks/>
        public event GetPettyCashDetailsCompletedEventHandler GetPettyCashDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffCitizenshipCompletedEventHandler GetStaffCitizenshipCompleted;
        
        /// <remarks/>
        public event GetStaffDepartmentDetailsCompletedEventHandler GetStaffDepartmentDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffDetailsCompletedEventHandler GetStaffDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffEmailCompletedEventHandler GetStaffEmailCompleted;
        
        /// <remarks/>
        public event GetStaffGenderCompletedEventHandler GetStaffGenderCompleted;
        
        /// <remarks/>
        public event GetStaffPasswordCompletedEventHandler GetStaffPasswordCompleted;
        
        /// <remarks/>
        public event GetStoreItemQuantityCompletedEventHandler GetStoreItemQuantityCompleted;
        
        /// <remarks/>
        public event HRMLeaveApplicationCompletedEventHandler HRMLeaveApplicationCompleted;
        
        /// <remarks/>
        public event HRMTrainingApplicationCompletedEventHandler HRMTrainingApplicationCompleted;
        
        /// <remarks/>
        public event HasPendingLeaveApplicationCompletedEventHandler HasPendingLeaveApplicationCompleted;
        
        /// <remarks/>
        public event InsertClaimRequisitionLinesCompletedEventHandler InsertClaimRequisitionLinesCompleted;
        
        /// <remarks/>
        public event InsertHRMTrainingParticipantsCompletedEventHandler InsertHRMTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event InsertImprestRequisitonLinesCompletedEventHandler InsertImprestRequisitonLinesCompleted;
        
        /// <remarks/>
        public event InsertImprestSurrenderLinesCompletedEventHandler InsertImprestSurrenderLinesCompleted;
        
        /// <remarks/>
        public event InsertPettyCashRequisitionLineCompletedEventHandler InsertPettyCashRequisitionLineCompleted;
        
        /// <remarks/>
        public event InsertPettyCashSurrenderLinesCompletedEventHandler InsertPettyCashSurrenderLinesCompleted;
        
        /// <remarks/>
        public event InsertStoreRequisitionLinesCompletedEventHandler InsertStoreRequisitionLinesCompleted;
        
        /// <remarks/>
        public event IsLeaveAnnualCompletedEventHandler IsLeaveAnnualCompleted;
        
        /// <remarks/>
        public event LoadImprestSurrenderLineDetailsCompletedEventHandler LoadImprestSurrenderLineDetailsCompleted;
        
        /// <remarks/>
        public event LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventHandler LoadPettyCashSurrenderSurrenderLineDetailsCompleted;
        
        /// <remarks/>
        public event LoginForUnchnagedPasswordCompletedEventHandler LoginForUnchnagedPasswordCompleted;
        
        /// <remarks/>
        public event OnCancelClaimRequisitionCompletedEventHandler OnCancelClaimRequisitionCompleted;
        
        /// <remarks/>
        public event OnCancelImprestRequisitionCompletedEventHandler OnCancelImprestRequisitionCompleted;
        
        /// <remarks/>
        public event OnCancelImprestSurrenderCompletedEventHandler OnCancelImprestSurrenderCompleted;
        
        /// <remarks/>
        public event OnCancelLeaveApplicationCompletedEventHandler OnCancelLeaveApplicationCompleted;
        
        /// <remarks/>
        public event OnCancelPettyCashRequisitionCompletedEventHandler OnCancelPettyCashRequisitionCompleted;
        
        /// <remarks/>
        public event OnCancelPettyCashSurrenderCompletedEventHandler OnCancelPettyCashSurrenderCompleted;
        
        /// <remarks/>
        public event OnCancelStoreRequisitionApprovalCompletedEventHandler OnCancelStoreRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event OnSendClaimRequisitionForApprovalCompletedEventHandler OnSendClaimRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event OnSendImprestRequisitionForApprovalCompletedEventHandler OnSendImprestRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event OnSendImprestSurrenderForApprovalCompletedEventHandler OnSendImprestSurrenderForApprovalCompleted;
        
        /// <remarks/>
        public event OnSendPettyCashRequisitionForApprovalCompletedEventHandler OnSendPettyCashRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event OnSendPettyCashSurrenderForApprovalCompletedEventHandler OnSendPettyCashSurrenderForApprovalCompleted;
        
        /// <remarks/>
        public event OnSendStoreRequisitionForApprovalCompletedEventHandler OnSendStoreRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event OnsendLeaveRequisitionForApprovalCompletedEventHandler OnsendLeaveRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event RegFileUploadAttCompletedEventHandler RegFileUploadAttCompleted;
        
        /// <remarks/>
        public event RemoveClaimRequisitionLinesCompletedEventHandler RemoveClaimRequisitionLinesCompleted;
        
        /// <remarks/>
        public event RemoveHRMTrainingParticipantCompletedEventHandler RemoveHRMTrainingParticipantCompleted;
        
        /// <remarks/>
        public event RemoveImprestRequisitionLineCompletedEventHandler RemoveImprestRequisitionLineCompleted;
        
        /// <remarks/>
        public event RemovePettyCashRequisitionLineCompletedEventHandler RemovePettyCashRequisitionLineCompleted;
        
        /// <remarks/>
        public event SaveMemoAttchmntsCompletedEventHandler SaveMemoAttchmntsCompleted;
        
        /// <remarks/>
        public event StaffLoginCompletedEventHandler StaffLoginCompleted;
        
        /// <remarks/>
        public event UpdatePettyCashSurrenderLinesCompletedEventHandler UpdatePettyCashSurrenderLinesCompleted;
        
        /// <remarks/>
        public event UpdateStaffPasswordCompletedEventHandler UpdateStaffPasswordCompleted;
        
        /// <remarks/>
        public event ValidateStartDateCompletedEventHandler ValidateStartDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:AvailableLeaveDays", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="AvailableLeaveDays_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AvailableLeaveDays(string username, string leaveType) {
            object[] results = this.Invoke("AvailableLeaveDays", new object[] {
                        username,
                        leaveType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string username, string leaveType) {
            this.AvailableLeaveDaysAsync(username, leaveType, null);
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string username, string leaveType, object userState) {
            if ((this.AvailableLeaveDaysOperationCompleted == null)) {
                this.AvailableLeaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAvailableLeaveDaysOperationCompleted);
            }
            this.InvokeAsync("AvailableLeaveDays", new object[] {
                        username,
                        leaveType}, this.AvailableLeaveDaysOperationCompleted, userState);
        }
        
        private void OnAvailableLeaveDaysOperationCompleted(object arg) {
            if ((this.AvailableLeaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AvailableLeaveDaysCompleted(this, new AvailableLeaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:AvailableLeaveDayss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="AvailableLeaveDayss_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AvailableLeaveDayss(string username, string leaveType) {
            object[] results = this.Invoke("AvailableLeaveDayss", new object[] {
                        username,
                        leaveType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AvailableLeaveDayssAsync(string username, string leaveType) {
            this.AvailableLeaveDayssAsync(username, leaveType, null);
        }
        
        /// <remarks/>
        public void AvailableLeaveDayssAsync(string username, string leaveType, object userState) {
            if ((this.AvailableLeaveDayssOperationCompleted == null)) {
                this.AvailableLeaveDayssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAvailableLeaveDayssOperationCompleted);
            }
            this.InvokeAsync("AvailableLeaveDayss", new object[] {
                        username,
                        leaveType}, this.AvailableLeaveDayssOperationCompleted, userState);
        }
        
        private void OnAvailableLeaveDayssOperationCompleted(object arg) {
            if ((this.AvailableLeaveDayssCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AvailableLeaveDayssCompleted(this, new AvailableLeaveDayssCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CalcEndDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CalcEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcEndDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sDate, int lDays, string leave_Type) {
            object[] results = this.Invoke("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type) {
            this.CalcEndDateAsync(sDate, lDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type, object userState) {
            if ((this.CalcEndDateOperationCompleted == null)) {
                this.CalcEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcEndDateOperationCompleted);
            }
            this.InvokeAsync("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type}, this.CalcEndDateOperationCompleted, userState);
        }
        
        private void OnCalcEndDateOperationCompleted(object arg) {
            if ((this.CalcEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcEndDateCompleted(this, new CalcEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CalcReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CalcReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string leave_Type) {
            object[] results = this.Invoke("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type) {
            this.CalcReturnDateAsync(endDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type, object userState) {
            if ((this.CalcReturnDateOperationCompleted == null)) {
                this.CalcReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcReturnDateOperationCompleted);
            }
            this.InvokeAsync("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type}, this.CalcReturnDateOperationCompleted, userState);
        }
        
        private void OnCalcReturnDateOperationCompleted(object arg) {
            if ((this.CalcReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcReturnDateCompleted(this, new CalcReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CheckStaffPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CheckStaffPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffPasswordChanged(string username) {
            object[] results = this.Invoke("CheckStaffPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username) {
            this.CheckStaffPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username, object userState) {
            if ((this.CheckStaffPasswordChangedOperationCompleted == null)) {
                this.CheckStaffPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckStaffPasswordChanged", new object[] {
                        username}, this.CheckStaffPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckStaffPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckStaffPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffPasswordChangedCompleted(this, new CheckStaffPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CheckValidStaffNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CheckValidStaffNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckValidStaffNo(string username) {
            object[] results = this.Invoke("CheckValidStaffNo", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username) {
            this.CheckValidStaffNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username, object userState) {
            if ((this.CheckValidStaffNoOperationCompleted == null)) {
                this.CheckValidStaffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidStaffNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidStaffNo", new object[] {
                        username}, this.CheckValidStaffNoOperationCompleted, userState);
        }
        
        private void OnCheckValidStaffNoOperationCompleted(object arg) {
            if ((this.CheckValidStaffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidStaffNoCompleted(this, new CheckValidStaffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreateClaimRequisitionHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreateClaimRequisitionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateClaimRequisitionHeader(string username, string directorate, string department, string responsibilityCenter, string purpose) {
            object[] results = this.Invoke("CreateClaimRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        responsibilityCenter,
                        purpose});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateClaimRequisitionHeaderAsync(string username, string directorate, string department, string responsibilityCenter, string purpose) {
            this.CreateClaimRequisitionHeaderAsync(username, directorate, department, responsibilityCenter, purpose, null);
        }
        
        /// <remarks/>
        public void CreateClaimRequisitionHeaderAsync(string username, string directorate, string department, string responsibilityCenter, string purpose, object userState) {
            if ((this.CreateClaimRequisitionHeaderOperationCompleted == null)) {
                this.CreateClaimRequisitionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClaimRequisitionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateClaimRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        responsibilityCenter,
                        purpose}, this.CreateClaimRequisitionHeaderOperationCompleted, userState);
        }
        
        private void OnCreateClaimRequisitionHeaderOperationCompleted(object arg) {
            if ((this.CreateClaimRequisitionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClaimRequisitionHeaderCompleted(this, new CreateClaimRequisitionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreateImprestRequisitionHeade" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreateImprestRequisitionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestRequisitionHeader(string username, string directorate, string department, string resCenter, string purpose) {
            object[] results = this.Invoke("CreateImprestRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        resCenter,
                        purpose});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestRequisitionHeaderAsync(string username, string directorate, string department, string resCenter, string purpose) {
            this.CreateImprestRequisitionHeaderAsync(username, directorate, department, resCenter, purpose, null);
        }
        
        /// <remarks/>
        public void CreateImprestRequisitionHeaderAsync(string username, string directorate, string department, string resCenter, string purpose, object userState) {
            if ((this.CreateImprestRequisitionHeaderOperationCompleted == null)) {
                this.CreateImprestRequisitionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestRequisitionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        resCenter,
                        purpose}, this.CreateImprestRequisitionHeaderOperationCompleted, userState);
        }
        
        private void OnCreateImprestRequisitionHeaderOperationCompleted(object arg) {
            if ((this.CreateImprestRequisitionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestRequisitionHeaderCompleted(this, new CreateImprestRequisitionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreateImprestSurrenderHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreateImprestSurrenderHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrenderHeader(string surrenderNo, string imprestNo, string resCenter) {
            object[] results = this.Invoke("CreateImprestSurrenderHeader", new object[] {
                        surrenderNo,
                        imprestNo,
                        resCenter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderHeaderAsync(string surrenderNo, string imprestNo, string resCenter) {
            this.CreateImprestSurrenderHeaderAsync(surrenderNo, imprestNo, resCenter, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderHeaderAsync(string surrenderNo, string imprestNo, string resCenter, object userState) {
            if ((this.CreateImprestSurrenderHeaderOperationCompleted == null)) {
                this.CreateImprestSurrenderHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrenderHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrenderHeader", new object[] {
                        surrenderNo,
                        imprestNo,
                        resCenter}, this.CreateImprestSurrenderHeaderOperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrenderHeaderOperationCompleted(object arg) {
            if ((this.CreateImprestSurrenderHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrenderHeaderCompleted(this, new CreateImprestSurrenderHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreatePettyCashRequisitionHea" +
            "der", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreatePettyCashRequisitionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePettyCashRequisitionHeader(string username, string directorate, string department, string resCenter, string purpose) {
            object[] results = this.Invoke("CreatePettyCashRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        resCenter,
                        purpose});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePettyCashRequisitionHeaderAsync(string username, string directorate, string department, string resCenter, string purpose) {
            this.CreatePettyCashRequisitionHeaderAsync(username, directorate, department, resCenter, purpose, null);
        }
        
        /// <remarks/>
        public void CreatePettyCashRequisitionHeaderAsync(string username, string directorate, string department, string resCenter, string purpose, object userState) {
            if ((this.CreatePettyCashRequisitionHeaderOperationCompleted == null)) {
                this.CreatePettyCashRequisitionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePettyCashRequisitionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreatePettyCashRequisitionHeader", new object[] {
                        username,
                        directorate,
                        department,
                        resCenter,
                        purpose}, this.CreatePettyCashRequisitionHeaderOperationCompleted, userState);
        }
        
        private void OnCreatePettyCashRequisitionHeaderOperationCompleted(object arg) {
            if ((this.CreatePettyCashRequisitionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePettyCashRequisitionHeaderCompleted(this, new CreatePettyCashRequisitionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreatePettyCashSurrenderHeade" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreatePettyCashSurrenderHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePettyCashSurrenderHeader(string surrenderNo, string pettyCashNo, string resCenter) {
            object[] results = this.Invoke("CreatePettyCashSurrenderHeader", new object[] {
                        surrenderNo,
                        pettyCashNo,
                        resCenter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePettyCashSurrenderHeaderAsync(string surrenderNo, string pettyCashNo, string resCenter) {
            this.CreatePettyCashSurrenderHeaderAsync(surrenderNo, pettyCashNo, resCenter, null);
        }
        
        /// <remarks/>
        public void CreatePettyCashSurrenderHeaderAsync(string surrenderNo, string pettyCashNo, string resCenter, object userState) {
            if ((this.CreatePettyCashSurrenderHeaderOperationCompleted == null)) {
                this.CreatePettyCashSurrenderHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePettyCashSurrenderHeaderOperationCompleted);
            }
            this.InvokeAsync("CreatePettyCashSurrenderHeader", new object[] {
                        surrenderNo,
                        pettyCashNo,
                        resCenter}, this.CreatePettyCashSurrenderHeaderOperationCompleted, userState);
        }
        
        private void OnCreatePettyCashSurrenderHeaderOperationCompleted(object arg) {
            if ((this.CreatePettyCashSurrenderHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePettyCashSurrenderHeaderCompleted(this, new CreatePettyCashSurrenderHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CreateStoreRequisitionHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CreateStoreRequisitionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisitionHeader(string username, int requisitionType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime requiredDate, string directorate, string department, string resCenter, string issuingStore, string description) {
            object[] results = this.Invoke("CreateStoreRequisitionHeader", new object[] {
                        username,
                        requisitionType,
                        requiredDate,
                        directorate,
                        department,
                        resCenter,
                        issuingStore,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionHeaderAsync(string username, int requisitionType, System.DateTime requiredDate, string directorate, string department, string resCenter, string issuingStore, string description) {
            this.CreateStoreRequisitionHeaderAsync(username, requisitionType, requiredDate, directorate, department, resCenter, issuingStore, description, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionHeaderAsync(string username, int requisitionType, System.DateTime requiredDate, string directorate, string department, string resCenter, string issuingStore, string description, object userState) {
            if ((this.CreateStoreRequisitionHeaderOperationCompleted == null)) {
                this.CreateStoreRequisitionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisitionHeader", new object[] {
                        username,
                        requisitionType,
                        requiredDate,
                        directorate,
                        department,
                        resCenter,
                        issuingStore,
                        description}, this.CreateStoreRequisitionHeaderOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionHeaderOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionHeaderCompleted(this, new CreateStoreRequisitionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:DeleteDocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="DeleteDocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDocumentAttachment(string systemId, string fileName, string documentNo) {
            object[] results = this.Invoke("DeleteDocumentAttachment", new object[] {
                        systemId,
                        fileName,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(string systemId, string fileName, string documentNo) {
            this.DeleteDocumentAttachmentAsync(systemId, fileName, documentNo, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(string systemId, string fileName, string documentNo, object userState) {
            if ((this.DeleteDocumentAttachmentOperationCompleted == null)) {
                this.DeleteDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentAttachment", new object[] {
                        systemId,
                        fileName,
                        documentNo}, this.DeleteDocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DeleteDocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentAttachmentCompleted(this, new DeleteDocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:DetermineIfIncludesNonWorking" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="DetermineIfIncludesNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIncludesNonWorking(ref string fLeaveCode) {
            object[] results = this.Invoke("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode});
            fLeaveCode = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode) {
            this.DetermineIfIncludesNonWorkingAsync(fLeaveCode, null);
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode, object userState) {
            if ((this.DetermineIfIncludesNonWorkingOperationCompleted == null)) {
                this.DetermineIfIncludesNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIncludesNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode}, this.DetermineIfIncludesNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIncludesNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIncludesNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIncludesNonWorkingCompleted(this, new DetermineIfIncludesNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:DetermineIfIsNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="DetermineIfIsNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIsNonWorking([System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime bcDate, ref string leave_Type) {
            object[] results = this.Invoke("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type});
            bcDate = ((System.DateTime)(results[1]));
            leave_Type = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type) {
            this.DetermineIfIsNonWorkingAsync(bcDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type, object userState) {
            if ((this.DetermineIfIsNonWorkingOperationCompleted == null)) {
                this.DetermineIfIsNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIsNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type}, this.DetermineIfIsNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIsNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIsNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIsNonWorkingCompleted(this, new DetermineIfIsNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:DetermineLeaveReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="DetermineLeaveReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime DetermineLeaveReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            object[] results = this.Invoke("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            this.DetermineLeaveReturnDateAsync(fBeginDate, fDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type, object userState) {
            if ((this.DetermineLeaveReturnDateOperationCompleted == null)) {
                this.DetermineLeaveReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineLeaveReturnDateOperationCompleted);
            }
            this.InvokeAsync("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type}, this.DetermineLeaveReturnDateOperationCompleted, userState);
        }
        
        private void OnDetermineLeaveReturnDateOperationCompleted(object arg) {
            if ((this.DetermineLeaveReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineLeaveReturnDateCompleted(this, new DetermineLeaveReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GeneratePayslipReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GeneratePayslipReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GeneratePayslipReport(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period, string fileNameFromApp) {
            this.Invoke("GeneratePayslipReport", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GeneratePayslipReportAsync(string employeeNo, System.DateTime period, string fileNameFromApp) {
            this.GeneratePayslipReportAsync(employeeNo, period, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipReportAsync(string employeeNo, System.DateTime period, string fileNameFromApp, object userState) {
            if ((this.GeneratePayslipReportOperationCompleted == null)) {
                this.GeneratePayslipReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslipReport", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp}, this.GeneratePayslipReportOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipReportOperationCompleted(object arg) {
            if ((this.GeneratePayslipReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GenerateStaffLeaveStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GenerateStaffLeaveStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateStaffLeaveStatement(string username, string fileNameFromApp) {
            this.Invoke("GenerateStaffLeaveStatement", new object[] {
                        username,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GenerateStaffLeaveStatementAsync(string username, string fileNameFromApp) {
            this.GenerateStaffLeaveStatementAsync(username, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateStaffLeaveStatementAsync(string username, string fileNameFromApp, object userState) {
            if ((this.GenerateStaffLeaveStatementOperationCompleted == null)) {
                this.GenerateStaffLeaveStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateStaffLeaveStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateStaffLeaveStatement", new object[] {
                        username,
                        fileNameFromApp}, this.GenerateStaffLeaveStatementOperationCompleted, userState);
        }
        
        private void OnGenerateStaffLeaveStatementOperationCompleted(object arg) {
            if ((this.GenerateStaffLeaveStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateStaffLeaveStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:Generatep9Report", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="Generatep9Report_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Generatep9Report(string employeeNo, int period, string fileNameFromApp) {
            this.Invoke("Generatep9Report", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void Generatep9ReportAsync(string employeeNo, int period, string fileNameFromApp) {
            this.Generatep9ReportAsync(employeeNo, period, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void Generatep9ReportAsync(string employeeNo, int period, string fileNameFromApp, object userState) {
            if ((this.Generatep9ReportOperationCompleted == null)) {
                this.Generatep9ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratep9ReportOperationCompleted);
            }
            this.InvokeAsync("Generatep9Report", new object[] {
                        employeeNo,
                        period,
                        fileNameFromApp}, this.Generatep9ReportOperationCompleted, userState);
        }
        
        private void OnGeneratep9ReportOperationCompleted(object arg) {
            if ((this.Generatep9ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Generatep9ReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetAttachmentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetAttachmentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAttachmentDetails(string systemId) {
            object[] results = this.Invoke("GetAttachmentDetails", new object[] {
                        systemId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentDetailsAsync(string systemId) {
            this.GetAttachmentDetailsAsync(systemId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentDetailsAsync(string systemId, object userState) {
            if ((this.GetAttachmentDetailsOperationCompleted == null)) {
                this.GetAttachmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentDetails", new object[] {
                        systemId}, this.GetAttachmentDetailsOperationCompleted, userState);
        }
        
        private void OnGetAttachmentDetailsOperationCompleted(object arg) {
            if ((this.GetAttachmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentDetailsCompleted(this, new GetAttachmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetEmployeeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetEmployeeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeName(string employeeCode) {
            object[] results = this.Invoke("GetEmployeeName", new object[] {
                        employeeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeCode) {
            this.GetEmployeeNameAsync(employeeCode, null);
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeCode, object userState) {
            if ((this.GetEmployeeNameOperationCompleted == null)) {
                this.GetEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeName", new object[] {
                        employeeCode}, this.GetEmployeeNameOperationCompleted, userState);
        }
        
        private void OnGetEmployeeNameOperationCompleted(object arg) {
            if ((this.GetEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeNameCompleted(this, new GetEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetImprestDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetImprestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestDetails(string imprestNo) {
            object[] results = this.Invoke("GetImprestDetails", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestDetailsAsync(string imprestNo) {
            this.GetImprestDetailsAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void GetImprestDetailsAsync(string imprestNo, object userState) {
            if ((this.GetImprestDetailsOperationCompleted == null)) {
                this.GetImprestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestDetailsOperationCompleted);
            }
            this.InvokeAsync("GetImprestDetails", new object[] {
                        imprestNo}, this.GetImprestDetailsOperationCompleted, userState);
        }
        
        private void OnGetImprestDetailsOperationCompleted(object arg) {
            if ((this.GetImprestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestDetailsCompleted(this, new GetImprestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetItemQuantity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetItemQuantity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetItemQuantity(string itemNo) {
            object[] results = this.Invoke("GetItemQuantity", new object[] {
                        itemNo});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemQuantityAsync(string itemNo) {
            this.GetItemQuantityAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void GetItemQuantityAsync(string itemNo, object userState) {
            if ((this.GetItemQuantityOperationCompleted == null)) {
                this.GetItemQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemQuantityOperationCompleted);
            }
            this.InvokeAsync("GetItemQuantity", new object[] {
                        itemNo}, this.GetItemQuantityOperationCompleted, userState);
        }
        
        private void OnGetItemQuantityOperationCompleted(object arg) {
            if ((this.GetItemQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemQuantityCompleted(this, new GetItemQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLeaveRelieverDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLeaveRelieverDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLeaveRelieverDetails(string relieverNo) {
            object[] results = this.Invoke("GetLeaveRelieverDetails", new object[] {
                        relieverNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveRelieverDetailsAsync(string relieverNo) {
            this.GetLeaveRelieverDetailsAsync(relieverNo, null);
        }
        
        /// <remarks/>
        public void GetLeaveRelieverDetailsAsync(string relieverNo, object userState) {
            if ((this.GetLeaveRelieverDetailsOperationCompleted == null)) {
                this.GetLeaveRelieverDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveRelieverDetailsOperationCompleted);
            }
            this.InvokeAsync("GetLeaveRelieverDetails", new object[] {
                        relieverNo}, this.GetLeaveRelieverDetailsOperationCompleted, userState);
        }
        
        private void OnGetLeaveRelieverDetailsOperationCompleted(object arg) {
            if ((this.GetLeaveRelieverDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveRelieverDetailsCompleted(this, new GetLeaveRelieverDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetNextImprestSurrenderNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetNextImprestSurrenderNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNextImprestSurrenderNo() {
            object[] results = this.Invoke("GetNextImprestSurrenderNo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextImprestSurrenderNoAsync() {
            this.GetNextImprestSurrenderNoAsync(null);
        }
        
        /// <remarks/>
        public void GetNextImprestSurrenderNoAsync(object userState) {
            if ((this.GetNextImprestSurrenderNoOperationCompleted == null)) {
                this.GetNextImprestSurrenderNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextImprestSurrenderNoOperationCompleted);
            }
            this.InvokeAsync("GetNextImprestSurrenderNo", new object[0], this.GetNextImprestSurrenderNoOperationCompleted, userState);
        }
        
        private void OnGetNextImprestSurrenderNoOperationCompleted(object arg) {
            if ((this.GetNextImprestSurrenderNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextImprestSurrenderNoCompleted(this, new GetNextImprestSurrenderNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetNextPettyCashNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetNextPettyCashNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNextPettyCashNo() {
            object[] results = this.Invoke("GetNextPettyCashNo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextPettyCashNoAsync() {
            this.GetNextPettyCashNoAsync(null);
        }
        
        /// <remarks/>
        public void GetNextPettyCashNoAsync(object userState) {
            if ((this.GetNextPettyCashNoOperationCompleted == null)) {
                this.GetNextPettyCashNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextPettyCashNoOperationCompleted);
            }
            this.InvokeAsync("GetNextPettyCashNo", new object[0], this.GetNextPettyCashNoOperationCompleted, userState);
        }
        
        private void OnGetNextPettyCashNoOperationCompleted(object arg) {
            if ((this.GetNextPettyCashNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextPettyCashNoCompleted(this, new GetNextPettyCashNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetPettyCashDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetPettyCashDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPettyCashDetails(string pettyCashNo) {
            object[] results = this.Invoke("GetPettyCashDetails", new object[] {
                        pettyCashNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPettyCashDetailsAsync(string pettyCashNo) {
            this.GetPettyCashDetailsAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void GetPettyCashDetailsAsync(string pettyCashNo, object userState) {
            if ((this.GetPettyCashDetailsOperationCompleted == null)) {
                this.GetPettyCashDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPettyCashDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPettyCashDetails", new object[] {
                        pettyCashNo}, this.GetPettyCashDetailsOperationCompleted, userState);
        }
        
        private void OnGetPettyCashDetailsOperationCompleted(object arg) {
            if ((this.GetPettyCashDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPettyCashDetailsCompleted(this, new GetPettyCashDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffCitizenship", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffCitizenship_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffCitizenship(string code) {
            object[] results = this.Invoke("GetStaffCitizenship", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffCitizenshipAsync(string code) {
            this.GetStaffCitizenshipAsync(code, null);
        }
        
        /// <remarks/>
        public void GetStaffCitizenshipAsync(string code, object userState) {
            if ((this.GetStaffCitizenshipOperationCompleted == null)) {
                this.GetStaffCitizenshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffCitizenshipOperationCompleted);
            }
            this.InvokeAsync("GetStaffCitizenship", new object[] {
                        code}, this.GetStaffCitizenshipOperationCompleted, userState);
        }
        
        private void OnGetStaffCitizenshipOperationCompleted(object arg) {
            if ((this.GetStaffCitizenshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffCitizenshipCompleted(this, new GetStaffCitizenshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffDepartmentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffDepartmentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffDepartmentDetails(string username) {
            object[] results = this.Invoke("GetStaffDepartmentDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffDepartmentDetailsAsync(string username) {
            this.GetStaffDepartmentDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffDepartmentDetailsAsync(string username, object userState) {
            if ((this.GetStaffDepartmentDetailsOperationCompleted == null)) {
                this.GetStaffDepartmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffDepartmentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStaffDepartmentDetails", new object[] {
                        username}, this.GetStaffDepartmentDetailsOperationCompleted, userState);
        }
        
        private void OnGetStaffDepartmentDetailsOperationCompleted(object arg) {
            if ((this.GetStaffDepartmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffDepartmentDetailsCompleted(this, new GetStaffDepartmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffDetails(string username) {
            object[] results = this.Invoke("GetStaffDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username) {
            this.GetStaffDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username, object userState) {
            if ((this.GetStaffDetailsOperationCompleted == null)) {
                this.GetStaffDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStaffDetails", new object[] {
                        username}, this.GetStaffDetailsOperationCompleted, userState);
        }
        
        private void OnGetStaffDetailsOperationCompleted(object arg) {
            if ((this.GetStaffDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffDetailsCompleted(this, new GetStaffDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffEmail(string username) {
            object[] results = this.Invoke("GetStaffEmail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffEmailAsync(string username) {
            this.GetStaffEmailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffEmailAsync(string username, object userState) {
            if ((this.GetStaffEmailOperationCompleted == null)) {
                this.GetStaffEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffEmailOperationCompleted);
            }
            this.InvokeAsync("GetStaffEmail", new object[] {
                        username}, this.GetStaffEmailOperationCompleted, userState);
        }
        
        private void OnGetStaffEmailOperationCompleted(object arg) {
            if ((this.GetStaffEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffEmailCompleted(this, new GetStaffEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffGender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffGender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffGender(string username) {
            object[] results = this.Invoke("GetStaffGender", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username) {
            this.GetStaffGenderAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username, object userState) {
            if ((this.GetStaffGenderOperationCompleted == null)) {
                this.GetStaffGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffGenderOperationCompleted);
            }
            this.InvokeAsync("GetStaffGender", new object[] {
                        username}, this.GetStaffGenderOperationCompleted, userState);
        }
        
        private void OnGetStaffGenderOperationCompleted(object arg) {
            if ((this.GetStaffGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffGenderCompleted(this, new GetStaffGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffPassword(string username) {
            object[] results = this.Invoke("GetStaffPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffPasswordAsync(string username) {
            this.GetStaffPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffPasswordAsync(string username, object userState) {
            if ((this.GetStaffPasswordOperationCompleted == null)) {
                this.GetStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("GetStaffPassword", new object[] {
                        username}, this.GetStaffPasswordOperationCompleted, userState);
        }
        
        private void OnGetStaffPasswordOperationCompleted(object arg) {
            if ((this.GetStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffPasswordCompleted(this, new GetStaffPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStoreItemQuantity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStoreItemQuantity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStoreItemQuantity(string itemNo) {
            object[] results = this.Invoke("GetStoreItemQuantity", new object[] {
                        itemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreItemQuantityAsync(string itemNo) {
            this.GetStoreItemQuantityAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void GetStoreItemQuantityAsync(string itemNo, object userState) {
            if ((this.GetStoreItemQuantityOperationCompleted == null)) {
                this.GetStoreItemQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreItemQuantityOperationCompleted);
            }
            this.InvokeAsync("GetStoreItemQuantity", new object[] {
                        itemNo}, this.GetStoreItemQuantityOperationCompleted, userState);
        }
        
        private void OnGetStoreItemQuantityOperationCompleted(object arg) {
            if ((this.GetStoreItemQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreItemQuantityCompleted(this, new GetStoreItemQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:HRMLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="HRMLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRMLeaveApplication(string username, string reliever, string leaveType, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, string purpose, string responsibilityCenter, string directorate, string department) {
            object[] results = this.Invoke("HRMLeaveApplication", new object[] {
                        username,
                        reliever,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        purpose,
                        responsibilityCenter,
                        directorate,
                        department});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRMLeaveApplicationAsync(string username, string reliever, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string purpose, string responsibilityCenter, string directorate, string department) {
            this.HRMLeaveApplicationAsync(username, reliever, leaveType, appliedDays, startDate, endDate, returnDate, purpose, responsibilityCenter, directorate, department, null);
        }
        
        /// <remarks/>
        public void HRMLeaveApplicationAsync(string username, string reliever, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string purpose, string responsibilityCenter, string directorate, string department, object userState) {
            if ((this.HRMLeaveApplicationOperationCompleted == null)) {
                this.HRMLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRMLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("HRMLeaveApplication", new object[] {
                        username,
                        reliever,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        purpose,
                        responsibilityCenter,
                        directorate,
                        department}, this.HRMLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnHRMLeaveApplicationOperationCompleted(object arg) {
            if ((this.HRMLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRMLeaveApplicationCompleted(this, new HRMLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:HRMTrainingApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="HRMTrainingApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRMTrainingApplication(string username, string supervisor, int trainingCategory, string courseCode, string purpose, int sponsor, int location, string country, string county, string trainer, string directorate, string department) {
            object[] results = this.Invoke("HRMTrainingApplication", new object[] {
                        username,
                        supervisor,
                        trainingCategory,
                        courseCode,
                        purpose,
                        sponsor,
                        location,
                        country,
                        county,
                        trainer,
                        directorate,
                        department});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRMTrainingApplicationAsync(string username, string supervisor, int trainingCategory, string courseCode, string purpose, int sponsor, int location, string country, string county, string trainer, string directorate, string department) {
            this.HRMTrainingApplicationAsync(username, supervisor, trainingCategory, courseCode, purpose, sponsor, location, country, county, trainer, directorate, department, null);
        }
        
        /// <remarks/>
        public void HRMTrainingApplicationAsync(string username, string supervisor, int trainingCategory, string courseCode, string purpose, int sponsor, int location, string country, string county, string trainer, string directorate, string department, object userState) {
            if ((this.HRMTrainingApplicationOperationCompleted == null)) {
                this.HRMTrainingApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRMTrainingApplicationOperationCompleted);
            }
            this.InvokeAsync("HRMTrainingApplication", new object[] {
                        username,
                        supervisor,
                        trainingCategory,
                        courseCode,
                        purpose,
                        sponsor,
                        location,
                        country,
                        county,
                        trainer,
                        directorate,
                        department}, this.HRMTrainingApplicationOperationCompleted, userState);
        }
        
        private void OnHRMTrainingApplicationOperationCompleted(object arg) {
            if ((this.HRMTrainingApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRMTrainingApplicationCompleted(this, new HRMTrainingApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:HasPendingLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="HasPendingLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HasPendingLeaveApplication(string username) {
            object[] results = this.Invoke("HasPendingLeaveApplication", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HasPendingLeaveApplicationAsync(string username) {
            this.HasPendingLeaveApplicationAsync(username, null);
        }
        
        /// <remarks/>
        public void HasPendingLeaveApplicationAsync(string username, object userState) {
            if ((this.HasPendingLeaveApplicationOperationCompleted == null)) {
                this.HasPendingLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPendingLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("HasPendingLeaveApplication", new object[] {
                        username}, this.HasPendingLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnHasPendingLeaveApplicationOperationCompleted(object arg) {
            if ((this.HasPendingLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPendingLeaveApplicationCompleted(this, new HasPendingLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertClaimRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertClaimRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertClaimRequisitionLines(string claimNo, string claimType, decimal amount) {
            object[] results = this.Invoke("InsertClaimRequisitionLines", new object[] {
                        claimNo,
                        claimType,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClaimRequisitionLinesAsync(string claimNo, string claimType, decimal amount) {
            this.InsertClaimRequisitionLinesAsync(claimNo, claimType, amount, null);
        }
        
        /// <remarks/>
        public void InsertClaimRequisitionLinesAsync(string claimNo, string claimType, decimal amount, object userState) {
            if ((this.InsertClaimRequisitionLinesOperationCompleted == null)) {
                this.InsertClaimRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClaimRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertClaimRequisitionLines", new object[] {
                        claimNo,
                        claimType,
                        amount}, this.InsertClaimRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertClaimRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertClaimRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClaimRequisitionLinesCompleted(this, new InsertClaimRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertHRMTrainingParticipants" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertHRMTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertHRMTrainingParticipants(string trainingCode, string employeeCode, string objective) {
            object[] results = this.Invoke("InsertHRMTrainingParticipants", new object[] {
                        trainingCode,
                        employeeCode,
                        objective});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHRMTrainingParticipantsAsync(string trainingCode, string employeeCode, string objective) {
            this.InsertHRMTrainingParticipantsAsync(trainingCode, employeeCode, objective, null);
        }
        
        /// <remarks/>
        public void InsertHRMTrainingParticipantsAsync(string trainingCode, string employeeCode, string objective, object userState) {
            if ((this.InsertHRMTrainingParticipantsOperationCompleted == null)) {
                this.InsertHRMTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHRMTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("InsertHRMTrainingParticipants", new object[] {
                        trainingCode,
                        employeeCode,
                        objective}, this.InsertHRMTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnInsertHRMTrainingParticipantsOperationCompleted(object arg) {
            if ((this.InsertHRMTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHRMTrainingParticipantsCompleted(this, new InsertHRMTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertImprestRequisitonLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertImprestRequisitonLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestRequisitonLines(string imprestNo, string advanceType, decimal amount) {
            object[] results = this.Invoke("InsertImprestRequisitonLines", new object[] {
                        imprestNo,
                        advanceType,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestRequisitonLinesAsync(string imprestNo, string advanceType, decimal amount) {
            this.InsertImprestRequisitonLinesAsync(imprestNo, advanceType, amount, null);
        }
        
        /// <remarks/>
        public void InsertImprestRequisitonLinesAsync(string imprestNo, string advanceType, decimal amount, object userState) {
            if ((this.InsertImprestRequisitonLinesOperationCompleted == null)) {
                this.InsertImprestRequisitonLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestRequisitonLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestRequisitonLines", new object[] {
                        imprestNo,
                        advanceType,
                        amount}, this.InsertImprestRequisitonLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestRequisitonLinesOperationCompleted(object arg) {
            if ((this.InsertImprestRequisitonLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestRequisitonLinesCompleted(this, new InsertImprestRequisitonLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertImprestSurrenderLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertImprestSurrenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestSurrenderLines(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo, string accountNo) {
            object[] results = this.Invoke("InsertImprestSurrenderLines", new object[] {
                        documentNo,
                        actualSpent,
                        cashAmount,
                        imprestNo,
                        accountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderLinesAsync(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo, string accountNo) {
            this.InsertImprestSurrenderLinesAsync(documentNo, actualSpent, cashAmount, imprestNo, accountNo, null);
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderLinesAsync(string documentNo, decimal actualSpent, decimal cashAmount, string imprestNo, string accountNo, object userState) {
            if ((this.InsertImprestSurrenderLinesOperationCompleted == null)) {
                this.InsertImprestSurrenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestSurrenderLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestSurrenderLines", new object[] {
                        documentNo,
                        actualSpent,
                        cashAmount,
                        imprestNo,
                        accountNo}, this.InsertImprestSurrenderLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestSurrenderLinesOperationCompleted(object arg) {
            if ((this.InsertImprestSurrenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestSurrenderLinesCompleted(this, new InsertImprestSurrenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertPettyCashRequisitionLin" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertPettyCashRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPettyCashRequisitionLine(string pettyCashNo, string advanceType, decimal amount) {
            object[] results = this.Invoke("InsertPettyCashRequisitionLine", new object[] {
                        pettyCashNo,
                        advanceType,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPettyCashRequisitionLineAsync(string pettyCashNo, string advanceType, decimal amount) {
            this.InsertPettyCashRequisitionLineAsync(pettyCashNo, advanceType, amount, null);
        }
        
        /// <remarks/>
        public void InsertPettyCashRequisitionLineAsync(string pettyCashNo, string advanceType, decimal amount, object userState) {
            if ((this.InsertPettyCashRequisitionLineOperationCompleted == null)) {
                this.InsertPettyCashRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPettyCashRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("InsertPettyCashRequisitionLine", new object[] {
                        pettyCashNo,
                        advanceType,
                        amount}, this.InsertPettyCashRequisitionLineOperationCompleted, userState);
        }
        
        private void OnInsertPettyCashRequisitionLineOperationCompleted(object arg) {
            if ((this.InsertPettyCashRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPettyCashRequisitionLineCompleted(this, new InsertPettyCashRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertPettyCashSurrenderLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertPettyCashSurrenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertPettyCashSurrenderLines(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo) {
            this.Invoke("InsertPettyCashSurrenderLines", new object[] {
                        documentNo,
                        pettyCashNo,
                        amountSpent,
                        cashReturned,
                        accountNo});
        }
        
        /// <remarks/>
        public void InsertPettyCashSurrenderLinesAsync(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo) {
            this.InsertPettyCashSurrenderLinesAsync(documentNo, pettyCashNo, amountSpent, cashReturned, accountNo, null);
        }
        
        /// <remarks/>
        public void InsertPettyCashSurrenderLinesAsync(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo, object userState) {
            if ((this.InsertPettyCashSurrenderLinesOperationCompleted == null)) {
                this.InsertPettyCashSurrenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPettyCashSurrenderLinesOperationCompleted);
            }
            this.InvokeAsync("InsertPettyCashSurrenderLines", new object[] {
                        documentNo,
                        pettyCashNo,
                        amountSpent,
                        cashReturned,
                        accountNo}, this.InsertPettyCashSurrenderLinesOperationCompleted, userState);
        }
        
        private void OnInsertPettyCashSurrenderLinesOperationCompleted(object arg) {
            if ((this.InsertPettyCashSurrenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPettyCashSurrenderLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:InsertStoreRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="InsertStoreRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertStoreRequisitionLines(string storeNo, int type, string itemNo, decimal quantityRequested, string issuingStore) {
            object[] results = this.Invoke("InsertStoreRequisitionLines", new object[] {
                        storeNo,
                        type,
                        itemNo,
                        quantityRequested,
                        issuingStore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertStoreRequisitionLinesAsync(string storeNo, int type, string itemNo, decimal quantityRequested, string issuingStore) {
            this.InsertStoreRequisitionLinesAsync(storeNo, type, itemNo, quantityRequested, issuingStore, null);
        }
        
        /// <remarks/>
        public void InsertStoreRequisitionLinesAsync(string storeNo, int type, string itemNo, decimal quantityRequested, string issuingStore, object userState) {
            if ((this.InsertStoreRequisitionLinesOperationCompleted == null)) {
                this.InsertStoreRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStoreRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertStoreRequisitionLines", new object[] {
                        storeNo,
                        type,
                        itemNo,
                        quantityRequested,
                        issuingStore}, this.InsertStoreRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertStoreRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertStoreRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStoreRequisitionLinesCompleted(this, new InsertStoreRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:IsLeaveAnnual", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="IsLeaveAnnual_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string IsLeaveAnnual(string leaveType) {
            object[] results = this.Invoke("IsLeaveAnnual", new object[] {
                        leaveType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsLeaveAnnualAsync(string leaveType) {
            this.IsLeaveAnnualAsync(leaveType, null);
        }
        
        /// <remarks/>
        public void IsLeaveAnnualAsync(string leaveType, object userState) {
            if ((this.IsLeaveAnnualOperationCompleted == null)) {
                this.IsLeaveAnnualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLeaveAnnualOperationCompleted);
            }
            this.InvokeAsync("IsLeaveAnnual", new object[] {
                        leaveType}, this.IsLeaveAnnualOperationCompleted, userState);
        }
        
        private void OnIsLeaveAnnualOperationCompleted(object arg) {
            if ((this.IsLeaveAnnualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLeaveAnnualCompleted(this, new IsLeaveAnnualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:LoadImprestSurrenderLineDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="LoadImprestSurrenderLineDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoadImprestSurrenderLineDetails(string surrenderNo, string accountNo) {
            object[] results = this.Invoke("LoadImprestSurrenderLineDetails", new object[] {
                        surrenderNo,
                        accountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadImprestSurrenderLineDetailsAsync(string surrenderNo, string accountNo) {
            this.LoadImprestSurrenderLineDetailsAsync(surrenderNo, accountNo, null);
        }
        
        /// <remarks/>
        public void LoadImprestSurrenderLineDetailsAsync(string surrenderNo, string accountNo, object userState) {
            if ((this.LoadImprestSurrenderLineDetailsOperationCompleted == null)) {
                this.LoadImprestSurrenderLineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadImprestSurrenderLineDetailsOperationCompleted);
            }
            this.InvokeAsync("LoadImprestSurrenderLineDetails", new object[] {
                        surrenderNo,
                        accountNo}, this.LoadImprestSurrenderLineDetailsOperationCompleted, userState);
        }
        
        private void OnLoadImprestSurrenderLineDetailsOperationCompleted(object arg) {
            if ((this.LoadImprestSurrenderLineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadImprestSurrenderLineDetailsCompleted(this, new LoadImprestSurrenderLineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:LoadPettyCashSurrenderSurrend" +
            "erLineDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="LoadPettyCashSurrenderSurrenderLineDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoadPettyCashSurrenderSurrenderLineDetails(string surrenderNo, string accountNo) {
            object[] results = this.Invoke("LoadPettyCashSurrenderSurrenderLineDetails", new object[] {
                        surrenderNo,
                        accountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPettyCashSurrenderSurrenderLineDetailsAsync(string surrenderNo, string accountNo) {
            this.LoadPettyCashSurrenderSurrenderLineDetailsAsync(surrenderNo, accountNo, null);
        }
        
        /// <remarks/>
        public void LoadPettyCashSurrenderSurrenderLineDetailsAsync(string surrenderNo, string accountNo, object userState) {
            if ((this.LoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted == null)) {
                this.LoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted);
            }
            this.InvokeAsync("LoadPettyCashSurrenderSurrenderLineDetails", new object[] {
                        surrenderNo,
                        accountNo}, this.LoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted, userState);
        }
        
        private void OnLoadPettyCashSurrenderSurrenderLineDetailsOperationCompleted(object arg) {
            if ((this.LoadPettyCashSurrenderSurrenderLineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPettyCashSurrenderSurrenderLineDetailsCompleted(this, new LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:LoginForUnchnagedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="LoginForUnchnagedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForUnchnagedPassword(string username) {
            object[] results = this.Invoke("LoginForUnchnagedPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForUnchnagedPasswordAsync(string username) {
            this.LoginForUnchnagedPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void LoginForUnchnagedPasswordAsync(string username, object userState) {
            if ((this.LoginForUnchnagedPasswordOperationCompleted == null)) {
                this.LoginForUnchnagedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForUnchnagedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForUnchnagedPassword", new object[] {
                        username}, this.LoginForUnchnagedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForUnchnagedPasswordOperationCompleted(object arg) {
            if ((this.LoginForUnchnagedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForUnchnagedPasswordCompleted(this, new LoginForUnchnagedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelClaimRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelClaimRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnCancelClaimRequisition(string claimNo) {
            this.Invoke("OnCancelClaimRequisition", new object[] {
                        claimNo});
        }
        
        /// <remarks/>
        public void OnCancelClaimRequisitionAsync(string claimNo) {
            this.OnCancelClaimRequisitionAsync(claimNo, null);
        }
        
        /// <remarks/>
        public void OnCancelClaimRequisitionAsync(string claimNo, object userState) {
            if ((this.OnCancelClaimRequisitionOperationCompleted == null)) {
                this.OnCancelClaimRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelClaimRequisitionOperationCompleted);
            }
            this.InvokeAsync("OnCancelClaimRequisition", new object[] {
                        claimNo}, this.OnCancelClaimRequisitionOperationCompleted, userState);
        }
        
        private void OnOnCancelClaimRequisitionOperationCompleted(object arg) {
            if ((this.OnCancelClaimRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelClaimRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelImprestRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelImprestRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnCancelImprestRequisition(string imprestNo) {
            this.Invoke("OnCancelImprestRequisition", new object[] {
                        imprestNo});
        }
        
        /// <remarks/>
        public void OnCancelImprestRequisitionAsync(string imprestNo) {
            this.OnCancelImprestRequisitionAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void OnCancelImprestRequisitionAsync(string imprestNo, object userState) {
            if ((this.OnCancelImprestRequisitionOperationCompleted == null)) {
                this.OnCancelImprestRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelImprestRequisitionOperationCompleted);
            }
            this.InvokeAsync("OnCancelImprestRequisition", new object[] {
                        imprestNo}, this.OnCancelImprestRequisitionOperationCompleted, userState);
        }
        
        private void OnOnCancelImprestRequisitionOperationCompleted(object arg) {
            if ((this.OnCancelImprestRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelImprestRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnCancelImprestSurrender(string surrenderNo) {
            object[] results = this.Invoke("OnCancelImprestSurrender", new object[] {
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnCancelImprestSurrenderAsync(string surrenderNo) {
            this.OnCancelImprestSurrenderAsync(surrenderNo, null);
        }
        
        /// <remarks/>
        public void OnCancelImprestSurrenderAsync(string surrenderNo, object userState) {
            if ((this.OnCancelImprestSurrenderOperationCompleted == null)) {
                this.OnCancelImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("OnCancelImprestSurrender", new object[] {
                        surrenderNo}, this.OnCancelImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnOnCancelImprestSurrenderOperationCompleted(object arg) {
            if ((this.OnCancelImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelImprestSurrenderCompleted(this, new OnCancelImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnCancelLeaveApplication(string leaveNo) {
            object[] results = this.Invoke("OnCancelLeaveApplication", new object[] {
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnCancelLeaveApplicationAsync(string leaveNo) {
            this.OnCancelLeaveApplicationAsync(leaveNo, null);
        }
        
        /// <remarks/>
        public void OnCancelLeaveApplicationAsync(string leaveNo, object userState) {
            if ((this.OnCancelLeaveApplicationOperationCompleted == null)) {
                this.OnCancelLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("OnCancelLeaveApplication", new object[] {
                        leaveNo}, this.OnCancelLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnOnCancelLeaveApplicationOperationCompleted(object arg) {
            if ((this.OnCancelLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelLeaveApplicationCompleted(this, new OnCancelLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelPettyCashRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelPettyCashRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnCancelPettyCashRequisition(string pettyCashNo) {
            this.Invoke("OnCancelPettyCashRequisition", new object[] {
                        pettyCashNo});
        }
        
        /// <remarks/>
        public void OnCancelPettyCashRequisitionAsync(string pettyCashNo) {
            this.OnCancelPettyCashRequisitionAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void OnCancelPettyCashRequisitionAsync(string pettyCashNo, object userState) {
            if ((this.OnCancelPettyCashRequisitionOperationCompleted == null)) {
                this.OnCancelPettyCashRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelPettyCashRequisitionOperationCompleted);
            }
            this.InvokeAsync("OnCancelPettyCashRequisition", new object[] {
                        pettyCashNo}, this.OnCancelPettyCashRequisitionOperationCompleted, userState);
        }
        
        private void OnOnCancelPettyCashRequisitionOperationCompleted(object arg) {
            if ((this.OnCancelPettyCashRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelPettyCashRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelPettyCashSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelPettyCashSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnCancelPettyCashSurrender(string pettyCashNo) {
            this.Invoke("OnCancelPettyCashSurrender", new object[] {
                        pettyCashNo});
        }
        
        /// <remarks/>
        public void OnCancelPettyCashSurrenderAsync(string pettyCashNo) {
            this.OnCancelPettyCashSurrenderAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void OnCancelPettyCashSurrenderAsync(string pettyCashNo, object userState) {
            if ((this.OnCancelPettyCashSurrenderOperationCompleted == null)) {
                this.OnCancelPettyCashSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelPettyCashSurrenderOperationCompleted);
            }
            this.InvokeAsync("OnCancelPettyCashSurrender", new object[] {
                        pettyCashNo}, this.OnCancelPettyCashSurrenderOperationCompleted, userState);
        }
        
        private void OnOnCancelPettyCashSurrenderOperationCompleted(object arg) {
            if ((this.OnCancelPettyCashSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelPettyCashSurrenderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnCancelStoreRequisitionAppro" +
            "val", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnCancelStoreRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnCancelStoreRequisitionApproval(string storeNo) {
            this.Invoke("OnCancelStoreRequisitionApproval", new object[] {
                        storeNo});
        }
        
        /// <remarks/>
        public void OnCancelStoreRequisitionApprovalAsync(string storeNo) {
            this.OnCancelStoreRequisitionApprovalAsync(storeNo, null);
        }
        
        /// <remarks/>
        public void OnCancelStoreRequisitionApprovalAsync(string storeNo, object userState) {
            if ((this.OnCancelStoreRequisitionApprovalOperationCompleted == null)) {
                this.OnCancelStoreRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnCancelStoreRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("OnCancelStoreRequisitionApproval", new object[] {
                        storeNo}, this.OnCancelStoreRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnOnCancelStoreRequisitionApprovalOperationCompleted(object arg) {
            if ((this.OnCancelStoreRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnCancelStoreRequisitionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendClaimRequisitionForAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendClaimRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendClaimRequisitionForApproval(string claimNo) {
            object[] results = this.Invoke("OnSendClaimRequisitionForApproval", new object[] {
                        claimNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendClaimRequisitionForApprovalAsync(string claimNo) {
            this.OnSendClaimRequisitionForApprovalAsync(claimNo, null);
        }
        
        /// <remarks/>
        public void OnSendClaimRequisitionForApprovalAsync(string claimNo, object userState) {
            if ((this.OnSendClaimRequisitionForApprovalOperationCompleted == null)) {
                this.OnSendClaimRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendClaimRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendClaimRequisitionForApproval", new object[] {
                        claimNo}, this.OnSendClaimRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendClaimRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.OnSendClaimRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendClaimRequisitionForApprovalCompleted(this, new OnSendClaimRequisitionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendImprestRequisitionForAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendImprestRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendImprestRequisitionForApproval(string imprestNo) {
            object[] results = this.Invoke("OnSendImprestRequisitionForApproval", new object[] {
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendImprestRequisitionForApprovalAsync(string imprestNo) {
            this.OnSendImprestRequisitionForApprovalAsync(imprestNo, null);
        }
        
        /// <remarks/>
        public void OnSendImprestRequisitionForApprovalAsync(string imprestNo, object userState) {
            if ((this.OnSendImprestRequisitionForApprovalOperationCompleted == null)) {
                this.OnSendImprestRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendImprestRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendImprestRequisitionForApproval", new object[] {
                        imprestNo}, this.OnSendImprestRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendImprestRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.OnSendImprestRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendImprestRequisitionForApprovalCompleted(this, new OnSendImprestRequisitionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendImprestSurrenderForAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendImprestSurrenderForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendImprestSurrenderForApproval(string surrenderNo) {
            object[] results = this.Invoke("OnSendImprestSurrenderForApproval", new object[] {
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendImprestSurrenderForApprovalAsync(string surrenderNo) {
            this.OnSendImprestSurrenderForApprovalAsync(surrenderNo, null);
        }
        
        /// <remarks/>
        public void OnSendImprestSurrenderForApprovalAsync(string surrenderNo, object userState) {
            if ((this.OnSendImprestSurrenderForApprovalOperationCompleted == null)) {
                this.OnSendImprestSurrenderForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendImprestSurrenderForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendImprestSurrenderForApproval", new object[] {
                        surrenderNo}, this.OnSendImprestSurrenderForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendImprestSurrenderForApprovalOperationCompleted(object arg) {
            if ((this.OnSendImprestSurrenderForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendImprestSurrenderForApprovalCompleted(this, new OnSendImprestSurrenderForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendPettyCashRequisitionFor" +
            "Approval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendPettyCashRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendPettyCashRequisitionForApproval(string pettyCashNo) {
            object[] results = this.Invoke("OnSendPettyCashRequisitionForApproval", new object[] {
                        pettyCashNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendPettyCashRequisitionForApprovalAsync(string pettyCashNo) {
            this.OnSendPettyCashRequisitionForApprovalAsync(pettyCashNo, null);
        }
        
        /// <remarks/>
        public void OnSendPettyCashRequisitionForApprovalAsync(string pettyCashNo, object userState) {
            if ((this.OnSendPettyCashRequisitionForApprovalOperationCompleted == null)) {
                this.OnSendPettyCashRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendPettyCashRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendPettyCashRequisitionForApproval", new object[] {
                        pettyCashNo}, this.OnSendPettyCashRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendPettyCashRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.OnSendPettyCashRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendPettyCashRequisitionForApprovalCompleted(this, new OnSendPettyCashRequisitionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendPettyCashSurrenderForAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendPettyCashSurrenderForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendPettyCashSurrenderForApproval(string surrenderNo) {
            object[] results = this.Invoke("OnSendPettyCashSurrenderForApproval", new object[] {
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendPettyCashSurrenderForApprovalAsync(string surrenderNo) {
            this.OnSendPettyCashSurrenderForApprovalAsync(surrenderNo, null);
        }
        
        /// <remarks/>
        public void OnSendPettyCashSurrenderForApprovalAsync(string surrenderNo, object userState) {
            if ((this.OnSendPettyCashSurrenderForApprovalOperationCompleted == null)) {
                this.OnSendPettyCashSurrenderForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendPettyCashSurrenderForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendPettyCashSurrenderForApproval", new object[] {
                        surrenderNo}, this.OnSendPettyCashSurrenderForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendPettyCashSurrenderForApprovalOperationCompleted(object arg) {
            if ((this.OnSendPettyCashSurrenderForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendPettyCashSurrenderForApprovalCompleted(this, new OnSendPettyCashSurrenderForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnSendStoreRequisitionForAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnSendStoreRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnSendStoreRequisitionForApproval(string storeNo) {
            object[] results = this.Invoke("OnSendStoreRequisitionForApproval", new object[] {
                        storeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnSendStoreRequisitionForApprovalAsync(string storeNo) {
            this.OnSendStoreRequisitionForApprovalAsync(storeNo, null);
        }
        
        /// <remarks/>
        public void OnSendStoreRequisitionForApprovalAsync(string storeNo, object userState) {
            if ((this.OnSendStoreRequisitionForApprovalOperationCompleted == null)) {
                this.OnSendStoreRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnSendStoreRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnSendStoreRequisitionForApproval", new object[] {
                        storeNo}, this.OnSendStoreRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnOnSendStoreRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.OnSendStoreRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnSendStoreRequisitionForApprovalCompleted(this, new OnSendStoreRequisitionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:OnsendLeaveRequisitionForAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="OnsendLeaveRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string OnsendLeaveRequisitionForApproval(string leaveNo) {
            object[] results = this.Invoke("OnsendLeaveRequisitionForApproval", new object[] {
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnsendLeaveRequisitionForApprovalAsync(string leaveNo) {
            this.OnsendLeaveRequisitionForApprovalAsync(leaveNo, null);
        }
        
        /// <remarks/>
        public void OnsendLeaveRequisitionForApprovalAsync(string leaveNo, object userState) {
            if ((this.OnsendLeaveRequisitionForApprovalOperationCompleted == null)) {
                this.OnsendLeaveRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnsendLeaveRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("OnsendLeaveRequisitionForApproval", new object[] {
                        leaveNo}, this.OnsendLeaveRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnOnsendLeaveRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.OnsendLeaveRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnsendLeaveRequisitionForApprovalCompleted(this, new OnsendLeaveRequisitionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:RegFileUploadAtt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="RegFileUploadAtt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RegFileUploadAtt(string retNo, string fileName, string attachment, int tableId, string docType) {
            object[] results = this.Invoke("RegFileUploadAtt", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId,
                        docType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegFileUploadAttAsync(string retNo, string fileName, string attachment, int tableId, string docType) {
            this.RegFileUploadAttAsync(retNo, fileName, attachment, tableId, docType, null);
        }
        
        /// <remarks/>
        public void RegFileUploadAttAsync(string retNo, string fileName, string attachment, int tableId, string docType, object userState) {
            if ((this.RegFileUploadAttOperationCompleted == null)) {
                this.RegFileUploadAttOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegFileUploadAttOperationCompleted);
            }
            this.InvokeAsync("RegFileUploadAtt", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId,
                        docType}, this.RegFileUploadAttOperationCompleted, userState);
        }
        
        private void OnRegFileUploadAttOperationCompleted(object arg) {
            if ((this.RegFileUploadAttCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegFileUploadAttCompleted(this, new RegFileUploadAttCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:RemoveClaimRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="RemoveClaimRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveClaimRequisitionLines(int lineNo) {
            object[] results = this.Invoke("RemoveClaimRequisitionLines", new object[] {
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveClaimRequisitionLinesAsync(int lineNo) {
            this.RemoveClaimRequisitionLinesAsync(lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveClaimRequisitionLinesAsync(int lineNo, object userState) {
            if ((this.RemoveClaimRequisitionLinesOperationCompleted == null)) {
                this.RemoveClaimRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveClaimRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("RemoveClaimRequisitionLines", new object[] {
                        lineNo}, this.RemoveClaimRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnRemoveClaimRequisitionLinesOperationCompleted(object arg) {
            if ((this.RemoveClaimRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveClaimRequisitionLinesCompleted(this, new RemoveClaimRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:RemoveHRMTrainingParticipant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="RemoveHRMTrainingParticipant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveHRMTrainingParticipant(string trainingCode, string employeeCode) {
            object[] results = this.Invoke("RemoveHRMTrainingParticipant", new object[] {
                        trainingCode,
                        employeeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveHRMTrainingParticipantAsync(string trainingCode, string employeeCode) {
            this.RemoveHRMTrainingParticipantAsync(trainingCode, employeeCode, null);
        }
        
        /// <remarks/>
        public void RemoveHRMTrainingParticipantAsync(string trainingCode, string employeeCode, object userState) {
            if ((this.RemoveHRMTrainingParticipantOperationCompleted == null)) {
                this.RemoveHRMTrainingParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveHRMTrainingParticipantOperationCompleted);
            }
            this.InvokeAsync("RemoveHRMTrainingParticipant", new object[] {
                        trainingCode,
                        employeeCode}, this.RemoveHRMTrainingParticipantOperationCompleted, userState);
        }
        
        private void OnRemoveHRMTrainingParticipantOperationCompleted(object arg) {
            if ((this.RemoveHRMTrainingParticipantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveHRMTrainingParticipantCompleted(this, new RemoveHRMTrainingParticipantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:RemoveImprestRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="RemoveImprestRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveImprestRequisitionLine(string imprestNo, string advanceType) {
            object[] results = this.Invoke("RemoveImprestRequisitionLine", new object[] {
                        imprestNo,
                        advanceType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveImprestRequisitionLineAsync(string imprestNo, string advanceType) {
            this.RemoveImprestRequisitionLineAsync(imprestNo, advanceType, null);
        }
        
        /// <remarks/>
        public void RemoveImprestRequisitionLineAsync(string imprestNo, string advanceType, object userState) {
            if ((this.RemoveImprestRequisitionLineOperationCompleted == null)) {
                this.RemoveImprestRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveImprestRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("RemoveImprestRequisitionLine", new object[] {
                        imprestNo,
                        advanceType}, this.RemoveImprestRequisitionLineOperationCompleted, userState);
        }
        
        private void OnRemoveImprestRequisitionLineOperationCompleted(object arg) {
            if ((this.RemoveImprestRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveImprestRequisitionLineCompleted(this, new RemoveImprestRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:RemovePettyCashRequisitionLin" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="RemovePettyCashRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemovePettyCashRequisitionLine(int lineNo) {
            object[] results = this.Invoke("RemovePettyCashRequisitionLine", new object[] {
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePettyCashRequisitionLineAsync(int lineNo) {
            this.RemovePettyCashRequisitionLineAsync(lineNo, null);
        }
        
        /// <remarks/>
        public void RemovePettyCashRequisitionLineAsync(int lineNo, object userState) {
            if ((this.RemovePettyCashRequisitionLineOperationCompleted == null)) {
                this.RemovePettyCashRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePettyCashRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("RemovePettyCashRequisitionLine", new object[] {
                        lineNo}, this.RemovePettyCashRequisitionLineOperationCompleted, userState);
        }
        
        private void OnRemovePettyCashRequisitionLineOperationCompleted(object arg) {
            if ((this.RemovePettyCashRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePettyCashRequisitionLineCompleted(this, new RemovePettyCashRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:SaveMemoAttchmnts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="SaveMemoAttchmnts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveMemoAttchmnts(string documentsNoz, string attachmentz, string decriptionz, string username) {
            this.Invoke("SaveMemoAttchmnts", new object[] {
                        documentsNoz,
                        attachmentz,
                        decriptionz,
                        username});
        }
        
        /// <remarks/>
        public void SaveMemoAttchmntsAsync(string documentsNoz, string attachmentz, string decriptionz, string username) {
            this.SaveMemoAttchmntsAsync(documentsNoz, attachmentz, decriptionz, username, null);
        }
        
        /// <remarks/>
        public void SaveMemoAttchmntsAsync(string documentsNoz, string attachmentz, string decriptionz, string username, object userState) {
            if ((this.SaveMemoAttchmntsOperationCompleted == null)) {
                this.SaveMemoAttchmntsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemoAttchmntsOperationCompleted);
            }
            this.InvokeAsync("SaveMemoAttchmnts", new object[] {
                        documentsNoz,
                        attachmentz,
                        decriptionz,
                        username}, this.SaveMemoAttchmntsOperationCompleted, userState);
        }
        
        private void OnSaveMemoAttchmntsOperationCompleted(object arg) {
            if ((this.SaveMemoAttchmntsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemoAttchmntsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:StaffLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="StaffLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string StaffLogin(string username, string password) {
            object[] results = this.Invoke("StaffLogin", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StaffLoginAsync(string username, string password) {
            this.StaffLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void StaffLoginAsync(string username, string password, object userState) {
            if ((this.StaffLoginOperationCompleted == null)) {
                this.StaffLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStaffLoginOperationCompleted);
            }
            this.InvokeAsync("StaffLogin", new object[] {
                        username,
                        password}, this.StaffLoginOperationCompleted, userState);
        }
        
        private void OnStaffLoginOperationCompleted(object arg) {
            if ((this.StaffLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StaffLoginCompleted(this, new StaffLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:UpdatePettyCashSurrenderLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="UpdatePettyCashSurrenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePettyCashSurrenderLines(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo) {
            this.Invoke("UpdatePettyCashSurrenderLines", new object[] {
                        documentNo,
                        pettyCashNo,
                        amountSpent,
                        cashReturned,
                        accountNo});
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLinesAsync(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo) {
            this.UpdatePettyCashSurrenderLinesAsync(documentNo, pettyCashNo, amountSpent, cashReturned, accountNo, null);
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLinesAsync(string documentNo, string pettyCashNo, decimal amountSpent, decimal cashReturned, string accountNo, object userState) {
            if ((this.UpdatePettyCashSurrenderLinesOperationCompleted == null)) {
                this.UpdatePettyCashSurrenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePettyCashSurrenderLinesOperationCompleted);
            }
            this.InvokeAsync("UpdatePettyCashSurrenderLines", new object[] {
                        documentNo,
                        pettyCashNo,
                        amountSpent,
                        cashReturned,
                        accountNo}, this.UpdatePettyCashSurrenderLinesOperationCompleted, userState);
        }
        
        private void OnUpdatePettyCashSurrenderLinesOperationCompleted(object arg) {
            if ((this.UpdatePettyCashSurrenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePettyCashSurrenderLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:UpdateStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="UpdateStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateStaffPassword(string username, string genpass) {
            object[] results = this.Invoke("UpdateStaffPassword", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStaffPasswordAsync(string username, string genpass) {
            this.UpdateStaffPasswordAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateStaffPasswordAsync(string username, string genpass, object userState) {
            if ((this.UpdateStaffPasswordOperationCompleted == null)) {
                this.UpdateStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateStaffPassword", new object[] {
                        username,
                        genpass}, this.UpdateStaffPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateStaffPasswordOperationCompleted(object arg) {
            if ((this.UpdateStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStaffPasswordCompleted(this, new UpdateStaffPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:ValidateStartDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="ValidateStartDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateStartDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime starting_Date) {
            this.Invoke("ValidateStartDate", new object[] {
                        starting_Date});
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date) {
            this.ValidateStartDateAsync(starting_Date, null);
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date, object userState) {
            if ((this.ValidateStartDateOperationCompleted == null)) {
                this.ValidateStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateStartDateOperationCompleted);
            }
            this.InvokeAsync("ValidateStartDate", new object[] {
                        starting_Date}, this.ValidateStartDateOperationCompleted, userState);
        }
        
        private void OnValidateStartDateOperationCompleted(object arg) {
            if ((this.ValidateStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateStartDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AvailableLeaveDaysCompletedEventHandler(object sender, AvailableLeaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AvailableLeaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AvailableLeaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AvailableLeaveDayssCompletedEventHandler(object sender, AvailableLeaveDayssCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AvailableLeaveDayssCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AvailableLeaveDayssCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CalcEndDateCompletedEventHandler(object sender, CalcEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CalcReturnDateCompletedEventHandler(object sender, CalcReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckStaffPasswordChangedCompletedEventHandler(object sender, CheckStaffPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidStaffNoCompletedEventHandler(object sender, CheckValidStaffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidStaffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidStaffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateClaimRequisitionHeaderCompletedEventHandler(object sender, CreateClaimRequisitionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClaimRequisitionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClaimRequisitionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateImprestRequisitionHeaderCompletedEventHandler(object sender, CreateImprestRequisitionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestRequisitionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestRequisitionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateImprestSurrenderHeaderCompletedEventHandler(object sender, CreateImprestSurrenderHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrenderHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrenderHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreatePettyCashRequisitionHeaderCompletedEventHandler(object sender, CreatePettyCashRequisitionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePettyCashRequisitionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePettyCashRequisitionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreatePettyCashSurrenderHeaderCompletedEventHandler(object sender, CreatePettyCashSurrenderHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePettyCashSurrenderHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePettyCashSurrenderHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateStoreRequisitionHeaderCompletedEventHandler(object sender, CreateStoreRequisitionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentAttachmentCompletedEventHandler(object sender, DeleteDocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineIfIncludesNonWorkingCompletedEventHandler(object sender, DetermineIfIncludesNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIncludesNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIncludesNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fLeaveCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineIfIsNonWorkingCompletedEventHandler(object sender, DetermineIfIsNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIsNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIsNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime bcDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string leave_Type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DetermineLeaveReturnDateCompletedEventHandler(object sender, DetermineLeaveReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineLeaveReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineLeaveReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GeneratePayslipReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GenerateStaffLeaveStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Generatep9ReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAttachmentDetailsCompletedEventHandler(object sender, GetAttachmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeeNameCompletedEventHandler(object sender, GetEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetImprestDetailsCompletedEventHandler(object sender, GetImprestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetItemQuantityCompletedEventHandler(object sender, GetItemQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLeaveRelieverDetailsCompletedEventHandler(object sender, GetLeaveRelieverDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveRelieverDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveRelieverDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNextImprestSurrenderNoCompletedEventHandler(object sender, GetNextImprestSurrenderNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextImprestSurrenderNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextImprestSurrenderNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNextPettyCashNoCompletedEventHandler(object sender, GetNextPettyCashNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextPettyCashNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextPettyCashNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPettyCashDetailsCompletedEventHandler(object sender, GetPettyCashDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPettyCashDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPettyCashDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffCitizenshipCompletedEventHandler(object sender, GetStaffCitizenshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffCitizenshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffCitizenshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffDepartmentDetailsCompletedEventHandler(object sender, GetStaffDepartmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffDepartmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffDepartmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffDetailsCompletedEventHandler(object sender, GetStaffDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffEmailCompletedEventHandler(object sender, GetStaffEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffGenderCompletedEventHandler(object sender, GetStaffGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStaffPasswordCompletedEventHandler(object sender, GetStaffPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStoreItemQuantityCompletedEventHandler(object sender, GetStoreItemQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreItemQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreItemQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HRMLeaveApplicationCompletedEventHandler(object sender, HRMLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRMLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRMLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HRMTrainingApplicationCompletedEventHandler(object sender, HRMTrainingApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRMTrainingApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRMTrainingApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HasPendingLeaveApplicationCompletedEventHandler(object sender, HasPendingLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPendingLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPendingLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertClaimRequisitionLinesCompletedEventHandler(object sender, InsertClaimRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClaimRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClaimRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertHRMTrainingParticipantsCompletedEventHandler(object sender, InsertHRMTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHRMTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHRMTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertImprestRequisitonLinesCompletedEventHandler(object sender, InsertImprestRequisitonLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestRequisitonLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestRequisitonLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertImprestSurrenderLinesCompletedEventHandler(object sender, InsertImprestSurrenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestSurrenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestSurrenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPettyCashRequisitionLineCompletedEventHandler(object sender, InsertPettyCashRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPettyCashRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPettyCashRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPettyCashSurrenderLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertStoreRequisitionLinesCompletedEventHandler(object sender, InsertStoreRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertStoreRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertStoreRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsLeaveAnnualCompletedEventHandler(object sender, IsLeaveAnnualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLeaveAnnualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLeaveAnnualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoadImprestSurrenderLineDetailsCompletedEventHandler(object sender, LoadImprestSurrenderLineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadImprestSurrenderLineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadImprestSurrenderLineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventHandler(object sender, LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPettyCashSurrenderSurrenderLineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoginForUnchnagedPasswordCompletedEventHandler(object sender, LoginForUnchnagedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForUnchnagedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForUnchnagedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelClaimRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelImprestRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelImprestSurrenderCompletedEventHandler(object sender, OnCancelImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnCancelImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnCancelImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelLeaveApplicationCompletedEventHandler(object sender, OnCancelLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnCancelLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnCancelLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelPettyCashRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelPettyCashSurrenderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnCancelStoreRequisitionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendClaimRequisitionForApprovalCompletedEventHandler(object sender, OnSendClaimRequisitionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendClaimRequisitionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendClaimRequisitionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendImprestRequisitionForApprovalCompletedEventHandler(object sender, OnSendImprestRequisitionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendImprestRequisitionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendImprestRequisitionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendImprestSurrenderForApprovalCompletedEventHandler(object sender, OnSendImprestSurrenderForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendImprestSurrenderForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendImprestSurrenderForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendPettyCashRequisitionForApprovalCompletedEventHandler(object sender, OnSendPettyCashRequisitionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendPettyCashRequisitionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendPettyCashRequisitionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendPettyCashSurrenderForApprovalCompletedEventHandler(object sender, OnSendPettyCashSurrenderForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendPettyCashSurrenderForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendPettyCashSurrenderForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnSendStoreRequisitionForApprovalCompletedEventHandler(object sender, OnSendStoreRequisitionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnSendStoreRequisitionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnSendStoreRequisitionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OnsendLeaveRequisitionForApprovalCompletedEventHandler(object sender, OnsendLeaveRequisitionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnsendLeaveRequisitionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnsendLeaveRequisitionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegFileUploadAttCompletedEventHandler(object sender, RegFileUploadAttCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegFileUploadAttCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegFileUploadAttCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveClaimRequisitionLinesCompletedEventHandler(object sender, RemoveClaimRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveClaimRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveClaimRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveHRMTrainingParticipantCompletedEventHandler(object sender, RemoveHRMTrainingParticipantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveHRMTrainingParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveHRMTrainingParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveImprestRequisitionLineCompletedEventHandler(object sender, RemoveImprestRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveImprestRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveImprestRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemovePettyCashRequisitionLineCompletedEventHandler(object sender, RemovePettyCashRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePettyCashRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePettyCashRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SaveMemoAttchmntsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StaffLoginCompletedEventHandler(object sender, StaffLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StaffLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StaffLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePettyCashSurrenderLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateStaffPasswordCompletedEventHandler(object sender, UpdateStaffPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStaffPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStaffPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateStartDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591